// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}


datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String @unique
  clerkId String @unique
  imgUrl  String
}

model Organization {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  slug    String   @unique
  name    String
  desc    String
  adminId String   @db.ObjectId
  members String[] @db.ObjectId
}

model Project {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  slug         String        @unique
  organization String        @db.ObjectId
  createdAt    DateTime      @default(now())
  deadline     DateTime?
  members      String[]      @db.ObjectId
  desc         String
  status       ProjectStatus @default(TODO)
}

enum ProjectStatus {
  TODO
  IN_PROGRESS
  DONE
  BLOCKED
}


model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  aim         String
  description String?
  deadline    DateTime
  priority    Priority
  status      TaskStatus  @default(TODO)
  members     String[] // array of user IDs
  projectId   String     // reference to the parent project
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  REVIEW
  DONE
}

